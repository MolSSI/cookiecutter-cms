name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on {{ '${{ matrix.os }}' }}, Python {{ '${{ matrix.python-version }}' }}
    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
    - name: Install testing dependencies
      shell: bash
      run: |
        python -m pip install -U pytest pytest-cov codecov
{% else %}
    # More info on options: https://github.com/goanpeca/setup-miniconda
    - uses: goanpeca/setup-miniconda@v1
      with:
        python-version: {{ '${{ matrix.python-version }}' }}
        environment-file: devtools/conda-envs/test_env.yaml
{% if cookiecutter.dependency_source == 'Prefer conda-forge over the default anaconda channel with pip fallback' %}
        channels: conda-forge,defaults
{% endif %}
        activate-environment: test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true
{% endif %}
    - name: Install package
{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
      shell: bash
      run: |
        python -m pip install .
{% else %}
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
{% endif %}

    - name: Run tests
{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
      shell: bash
{% else %}
      # conda setup requires this special shell
      shell: bash -l {0}
{% endif %}
      run: |
        python -m pytest -v --cov={{ cookiecutter.repo_name }} --cov-report=xml --color=yes {{ cookiecutter.repo_name }}/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-{{ '${{ matrix.os }}' }}-py{{ '${{ matrix.python-version }}' }}
