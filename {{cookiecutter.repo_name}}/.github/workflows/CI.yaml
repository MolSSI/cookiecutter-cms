name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on {{ '${{ matrix.os }}' }}, Python {{ '${{ matrix.python-version }}' }}
    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
      - name: Set up Python {{ '${{ matrix.python-version }}' }}
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ matrix.python-version }}' }}

      - name: Testing Dependencies
        shell: bash
        run: |
          python -m pip install -U pytest pytest-cov codecov
{% else %}
      # More info on options: https://github.com/marketplace/actions/setup-micromamba
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
{%- if cookiecutter.dependency_source == 'Prefer conda-forge with pip fallback' %}
          condarc: |
            channels:
              - conda-forge
{%- elif cookiecutter.dependency_source == 'Prefer default anaconda channel with pip fallback' %}
          condarc: |
            channels:
              - defaults
{%- endif %}
          create-args: >- 
            python={{ '${{ matrix.python-version }}' }}
{% endif %}
      - name: Install package
{%- if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
        shell: bash
        run: |
          python -m pip install .
{% else %}
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          micromamba list
{% endif %}
      - name: Run tests
{%- if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
        shell: bash
{% else %}
        # conda setup requires this special shell
        shell: bash -l {0}
{%- endif %}
        run: |
          pytest -v --cov={{ cookiecutter.repo_name }} --cov-report=xml --color=yes {{ cookiecutter.repo_name }}/tests/

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-{{ '${{ matrix.os }}' }}-py{{ '${{ matrix.python-version }}' }}
